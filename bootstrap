#!/bin/bash

BUILDPATH=${PWD}/build
PREFIX=/
export MACOSX_DEPLOYMENT_TARGET="10.12"
RESOURCES=/Applications/OpenSCTokenApp.app/Contents/PlugIns/OpenSCToken.appex/Contents/Resources

set -ex

export OBJC=clang
export OBJCXX=clang++
export CC=clang
export CXX=clang++

# Add pkg-config location for Macports-installed packages, like OpenSSL
#if [ -e /opt/local/share/pkgconfig ]; then
#    PKG_CONFIG_PATH=/opt/local/share/pkgconfig:${PKG_CONFIG_PATH}
#fi
#if [ -e /opt/local/lib/pkgconfig ]; then
#    PKG_CONFIG_PATH=/opt/local/lib/pkgconfig:${PKG_CONFIG_PATH}
#fi

echo "************************************"
echo "Building OpenSCToken..."
echo "BUILDPATH=${BUILDPATH}"
echo "PKG_CONFIG_PATH=${PKG_CONFIG_PATH}"
echo "PREFIX=${PREFIX}"
echo "************************************"

# Force building static OpenSSL from sources
#if ! pkg-config libcrypto --atleast-version=1.0.1; then
	# OpenSSL is not installed
	echo "OpenSSL not installed - building one locally"
	if ! test -e $BUILDPATH/openssl/$PREFIX/lib/pkgconfig; then
		# Build OpenSSL manually, because Apple's binaries are deprecated
		if ! test -e openssl; then
			git clone --depth=1 https://github.com/openssl/openssl.git -b OpenSSL_1_1_1-stable
		fi
		cd openssl
		KERNEL_BITS=64 ./config --prefix=$PREFIX
		make update
		make depend
		make
		make INSTALL_PREFIX=$BUILDPATH/openssl PREFIX=$BUILDPATH/openssl DESTDIR=$BUILDPATH/openssl install_sw
		cd ..
	fi
	export OPENSSL_CFLAGS="`env PKG_CONFIG_PATH=$BUILDPATH/openssl/$PREFIX/lib/pkgconfig PKG_CONFIG_SYSROOT_DIR=$BUILDPATH/openssl pkg-config --static --cflags libcrypto`"
	export OPENSSL_LIBS="`  env PKG_CONFIG_PATH=$BUILDPATH/openssl/$PREFIX/lib/pkgconfig PKG_CONFIG_SYSROOT_DIR=$BUILDPATH/openssl pkg-config --static --libs   libcrypto`"
#else  
#    # OpenSSL is installed - we'll use it instead of building one
#   	export OPENSSL_CFLAGS="`pkg-config --static --cflags libcrypto`"
#	export OPENSSL_LIBS="`pkg-config --static --libs   libcrypto`"
#fi

echo "OPENSSL_CFLAGS=${OPENSSL_CFLAGS}"
echo "OPENSSL_LIBS=${OPENSSL_LIBS}"

if ! test -e $BUILDPATH/openpace/$PREFIX/lib/pkgconfig; then
	if ! test -e openpace; then
		git clone --depth=1 https://github.com/mouse07410/openpace.git
	fi
	cd openpace
	if ! test -e configure; then
		autoreconf -vis
	fi
	./configure --disable-shared --prefix=$PREFIX --sysconfdir=$RESOURCES --enable-cvcdir=$RESOURCES --enable-x509dir=$RESOURCES CRYPTO_CFLAGS="$OPENSSL_CFLAGS" CRYPTO_LIBS="$OPENSSL_LIBS" HELP2MAN=/usr/bin/true
	touch src/cvc-create.1 src/cvc-print.1
	make DESTDIR=$BUILDPATH/openpace install
	cd ..
	export OPENPACE_CFLAGS="`env PKG_CONFIG_PATH=$BUILDPATH/openssl/$PREFIX/lib/pkgconfig:$BUILDPATH/openpace/$PREFIX/lib/pkgconfig PKG_CONFIG_SYSROOT_DIR=$BUILDPATH/openpace pkg-config --static --cflags libeac` $OPENSSL_CFLAGS"
	export OPENPACE_LIBS="`  env PKG_CONFIG_PATH=$BUILDPATH/openssl/$PREFIX/lib/pkgconfig:$BUILDPATH/openpace/$PREFIX/lib/pkgconfig PKG_CONFIG_SYSROOT_DIR=$BUILDPATH/openpace pkg-config --static --libs   libeac` $OPENSSL_LIBS"
fi

if ! test -e OpenSC; then
	git clone --depth=1 https://github.com/mouse07410/OpenSC.git
fi
cd OpenSC
if ! test -e configure; then
	autoreconf -vis
fi
./configure --disable-shared --prefix=$PREFIX --sysconfdir=$RESOURCES --disable-pcsc  --enable-cryptotokenkit --disable-notify
make
cd ..
